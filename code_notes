#Hey guys, I figure we can use this file for keeping notes on what we've figured out so far
#so far I created two separate files within ref_sequences that combines hsp70 sequences and mscrAgene sequences. below is the code I used

cat hsp70* > hsp70refs
cat mcrAgene* > mcrAgenerefs

#you should see these two files inside the ref_sequences folder
#next I ran muscle sequence with one of the proteome files against the mcrAgenerefs file

../muscle -in proteomes/proteome_01.fasta -out ref_sequences/mcrAgenerefs 

#this is currently what the code output looks like (not the actual final file but the descriptions while command is running)
MUSCLE v3.8.31 by Robert C. Edgar

http://www.drive5.com/muscle
This software is donated to the public domain.
Please cite: Edgar, R.C. Nucleic Acids Res 32(5), 1792-97.


*** WARNING *** Assuming Amino (see -seqtype option), invalid letters found: U
proteome_01 2486 seqs, max length 2025, avg  length 321
00:00:17     64 MB(5%)  Iter   1  100.00%  K-mer dist pass 1
00:00:17     64 MB(5%)  Iter   1  100.00%  K-mer dist pass 2
00:01:58  1952 MB(100%)  Iter   1  100.00%  Align node      
00:01:59  1952 MB(100%)  Iter   1  100.00%  Root alignment
00:04:07  1965 MB(100%)  Iter   2  100.00%  Refine tree   
00:04:07  1965 MB(100%)  Iter   2  100.00%  Root alignment
00:04:07  1965 MB(100%)  Iter   2  100.00%  Root alignment
00:23:34  1965 MB(100%)  Iter   3    4.77%  Refine biparts

#it is not yet completed
#I found this code online that says it will speed things up
2.4 Fastest speed
If you want the fastest possible speed, then the following example shows the applicable options for proteins.

muscle -in seqs.fa -out seqs.afa -maxiters 1 -diags1 -sv -distance1 kbit20_3

#I just realized that my first muscle code is probably wrong. I think the file after -out is just the name of the output file.
#next I tried

../muscle -in proteomes/proteome_01.fasta -out proteomes/proteome_01.afa -maxiters 1 -diags1 -sv -distance1 kbit20_3

#it went faster and this was my output
*** WARNING *** Assuming Amino (see -seqtype option), invalid letters found: U
proteome_01 2486 seqs, max length 2025, avg  length 321
00:00:18     39 MB(3%)  Iter   1  100.00%  K-bit distance matrix
00:00:31   653 MB(52%)  Iter   1  100.00%  Align node           
00:00:31   656 MB(52%)  Iter   1  100.00%  Root alignment

#output file is located in proteomes and is called "proteome_01.afa"
#then I tried hmmbuild
#I think the usage is(not sure tho, this was my interpretation from help menu):  hmmbuild -options <output file> <input file>
#this is what I tried and something seemed to run

../hmmer-3.2.1/bin/hmmbuild --amino proteomes/proteome_01.hmmbuild proteomes/proteome_01.afa

 input alignment file:             proteomes/proteome_01.afa
# output HMM file:                  proteomes/proteome_01.hmmbuild
# input alignment is asserted as:   protein
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# idx name                  nseq  alen  mlen eff_nseq re/pos description
#---- -------------------- ----- ----- ----- -------- ------ -----------
1     proteome_01           2486  2231  1297  2486.00  0.441 

#now try hmmsearch to filter out isolates containing mcrAgene
#Usage: hmmsearch [options] <hmmfile> <seqdb>
#input file is the file created after running hmmbuild then use mcrAgenerefs for sequence database?

../hmmer-3.2.1/bin/hmmsearch proteomes/proteome_01.hmmbuild ref_sequences/mcrAgenerefs

#this was the output I got. No hits detected - not sure if that is because this isolate actually doesn't have the gene or I did something wrong

# query HMM file:                  proteomes/proteome_01.hmmbuild
# target sequence database:        ref_sequences/mcrAgenerefs
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

Query:       proteome_01  [M=1297]
Scores for complete sequences (score includes all domains):
   --- full sequence ---   --- best 1 domain ---    -#dom-
    E-value  score  bias    E-value  score  bias    exp  N  Sequence Description
    ------- ------ -----    ------- ------ -----   ---- --  -------- -----------

   [No hits detected that satisfy reporting thresholds]


Domain annotation for each sequence (and alignments):

   [No targets detected that satisfy reporting thresholds]

Internal pipeline statistics summary:
-------------------------------------
Query model(s):                            1  (1297 nodes)
Target sequences:                         18  (10105 residues searched)
Passed MSV filter:                         0  (0); expected 0.4 (0.02)
Passed bias filter:                        0  (0); expected 0.4 (0.02)
Passed Vit filter:                         0  (0); expected 0.0 (0.001)
Passed Fwd filter:                         0  (0); expected 0.0 (1e-05)
Initial search space (Z):                 18  [actual number of targets]
Domain search space  (domZ):               0  [number of targets reported over threshold]
# CPU time: 0.00u 0.00s 00:00:00.00 Elapsed: 00:00:00.00
# Mc/sec: 2514.89
//
[ok]

##JAYME #I spoke with Stewart who hinted that the inital muscle -in should be the compiled file, though I'm not sure that makes sense. I pushed on with
#what Sam was doing and performed the same sequence for isolet 2 where I received no hits. I will run isolet 3 before class and have that for us to see if there is a 
#hit there. 
## JAYME Update- I have completed muscle/hmmer build/hmmer search following Sam's code for isolets 2-5 against mcrA and hsp70 with no hits at all. 
<<<<<<< HEAD

=======
##### muscle needed to be against ref genes, those are listed as alignment._____ 
#### hmmbuild requires a singular input where the output is hmm.build (first) and then your input file
#####hmmsearch applies hmmbuild against the proteome

./Private/bin/bin/hmmbuild --amino ./bioinformatics_project2019/alingment.mcrA.hmmbuild ./bioinformatics_project2019/alingment.mcrA

./Private/bin/bin/hmmsearch --tblout proteom.x.table ./bioinformatics_project2019/alingment.mcrA.hmmbuild ./bioinformatics_project2019/proteomes/proteome_0x.fasta
>>>>>>> 22ba7153d327d5ba6e8a326310398d8c018e7e70
